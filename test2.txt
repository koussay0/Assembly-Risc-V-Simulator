# Initialize values in registers
addi x5, x0, 5      # x5 = a = 5
addi x6, x0, 3      # x6 = b = 3
addi x7, x0, 4      # x7 = c = 4
addi x8, x0, 10     # x8 = d = 10
addi x9, x0, 2      # x9 = e = 2
addi x10, x0, 6     # x10 = f = 6

# Compute (a + b)
add x11, x5, x6     # x11 = a + b

# Compute (d - e)
sub x12, x8, x9     # x12 = d - e

# Compute ((a + b) * c)
mul x13, x11, x7    # x13 = (a + b) * c

# Compute ((d - e) * f)
mul x14, x12, x10   # x14 = (d - e) * f

# Compute final result
add x15, x13, x14   # x15 = ((a + b) * c) + ((d - e) * f)

# Store the result in x20 for output
addi x20, x15, 0    # x20 = result


# x5 = 5       (a)
# x6 = 3       (b)
# x7 = 4       (c)
# x8 = 10      (d)
# x9 = 2       (e)
# x10 = 6      (f)
# x11 = 8      (a + b)
# x12 = 8      (d - e)
# x13 = 32     ((a + b) * c)
# x14 = 48     ((d - e) * f)
# x15 = 80     (final result)
# x20 = 80     (output)
